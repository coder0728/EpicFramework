#import "java_lang_String.h"
#import "com_epic_framework_common_util_exceptions_EpicNativeMethodMissingImplementation.h"
#import "org_xmlvm_iphone_UIImage.h"

// Automatically generated by xmlvm2obj. Do not edit!


#import "com_epic_framework_implementation_EpicBitmapImplementationNative.h"
#import "org_xmlvm_iphone_NSObject.h"


@implementation com_epic_framework_implementation_EpicBitmapImplementationNative;

+ (org_xmlvm_iphone_UIImage*) resizeImage___org_xmlvm_iphone_UIImage_int_int
  : (org_xmlvm_iphone_UIImage*) src 
  : (int) width 
  : (int) height
{
  CGInterpolationQuality quality =  kCGInterpolationHigh;
  CGImageRef imageRef = src.CGImage;
  CGRect destRect = CGRectMake(0, 0, width, height);
  CGColorSpaceRef colorSpace = CGColorSpaceCreateDeviceRGB();
  void *bitmapData = 0; //malloc( 4 * width * height );
  CGContextRef destContext = CGBitmapContextCreate(
    bitmapData,                     // image byte array
    width,                          // width
    height,                         // height
    8,                              // bits-per-component
    4*width,                        // bytes-per-row (is 0 ok?)
    colorSpace,                     // colorSpace
    kCGImageAlphaPremultipliedFirst // bitmapFormat
  );
  CGContextSetInterpolationQuality(destContext, quality);
  CGContextDrawImage(destContext, destRect, imageRef);
  CGImageRef newImageRef = CGBitmapContextCreateImage(destContext);
  org_xmlvm_iphone_UIImage *newImage = [UIImage imageWithCGImage:newImageRef];
  CGContextRelease(destContext);
  CGImageRelease(newImageRef);
  CGColorSpaceRelease(colorSpace);
  return [XMLVM_NIL2NULL(newImage) retain];
}

@end
